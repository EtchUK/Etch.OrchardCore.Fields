import Vue from 'vue';

import MediaItem from '../../models/mediaItem';

export default Vue.extend({
    name: 'responsiveMediaItem',

    props: {
        breakpoints: Array,
        media: MediaItem,
    },

    data: function() {
        return {
            selectedBreakpoint: 0,
        };
    },

    computed: {
        activeBreakpoint(): number {
            if (this.selectedBreakpoint > 0) {
                return this.selectedBreakpoint as number;
            }

            return (this.media as MediaItem).getLargestBreakpoint();
        },

        activeName(): string {
            const source = (this.media as MediaItem).getSourceAt(this
                .activeBreakpoint as number);

            if (source === null) {
                const alternateSource = (this
                    .media as MediaItem).getSourceOrAlternative(this
                    .activeBreakpoint as number);

                return alternateSource
                    ? `Auto generated by ${alternateSource.breakpoint}`
                    : 'N/A';
            }

            return source.name;
        },

        isOnlySmallImage(): boolean {
            return (this.media as MediaItem).sources.length === 1 && (this.media as MediaItem).sources[0].breakpoint === 0;
        },

        url(): string {
            return (this.media as MediaItem).getUrlAt(this
                .activeBreakpoint as number);
        },
    },

    methods: {
        hasNoSource(breakpoint: number): boolean {
            return !((this as any).media as MediaItem).hasSource(breakpoint);
        },

        remove(): void {
            this.$emit('remove', {
                media: (this as any).media,
            });
        },

        removeBreakpoint(): void {
            if (
                ((this as any).media as MediaItem).removeBreakpoint(
                    (this as any).activeBreakpoint
                )
            ) {
                (this as any).remove();
            }
        },

        update(): void {
            this.$emit('update', {
                media: (this as any).media,
                breakpoint: (this as any).activeBreakpoint,
            });
        },
    },

    template: `<div class="card">
        <img :src="url" class="card-img-top" alt="" />
        <div class="card-body flex-column">
            <p class="small">{{ activeName }} {{ isOnlySmallImage }}</p>

            <div class="d-flex flex-row flex-wrap mb-1">
                <button 
                    v-for="breakpoint in breakpoints" 
                    type="button" 
                    class="btn btn-secondary btn-sm mb-1 mr-1" 
                    v-on:click="selectedBreakpoint = breakpoint" 
                    v-bind:class="{ active: activeBreakpoint == breakpoint, 'btn-warning': hasNoSource(breakpoint) }">
                    {{ breakpoint }}
                </button>
            </div>

            <div v-bind:class="{ 'd-none': isOnlySmallImage }">
                <div 
                    class="d-flex flex-row flex-wrap mb-2"
                    v-bind:class="{ 'display-none': !isOnlySmallImage }">
                    <a href="#" class="mr-3" v-on:click.prevent="update">Change image at {{ activeBreakpoint }}</a>
                </div>
            </div>

            <div 
                class="d-none"
                v-bind:class="{ 'd-block': isOnlySmallImage }">
                <div 
                    class="d-flex flex-row flex-wrap mb-2">
                    <p class="small mb-1"><em>Image is smaller than smallest breakpoint</em></p>
                </div>
            </div>

            <div class="btn-group">
                <button type="button" title="Remove Options" class="btn btn-danger btn-sm dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    <svg class="svg-inline--fa fa-trash-alt fa-w-14" aria-hidden="true" focusable="false" data-prefix="fa" data-icon="trash-alt" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" data-fa-i2svg=""><path fill="currentColor" d="M32 464a48 48 0 0 0 48 48h288a48 48 0 0 0 48-48V128H32zm272-256a16 16 0 0 1 32 0v224a16 16 0 0 1-32 0zm-96 0a16 16 0 0 1 32 0v224a16 16 0 0 1-32 0zm-96 0a16 16 0 0 1 32 0v224a16 16 0 0 1-32 0zM432 32H312l-9.4-18.7A24 24 0 0 0 281.1 0H166.8a23.72 23.72 0 0 0-21.4 13.3L136 32H16A16 16 0 0 0 0 48v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16z"></path></svg>
                </button>
                <div class="dropdown-menu">
                    <a class="dropdown-item btn-sm" v-on:click.prevent="removeBreakpoint">Remove at {{ activeBreakpoint }}</a>
                    <a class="dropdown-item btn-sm" v-on:click.prevent="remove">Remove</a>
                </div>
            </div>
        </div>
    </div>`,
});
