@model Etch.OrchardCore.Fields.ResponsiveMedia.ViewModels.EditResponsiveMediaFieldViewModel

@using OrchardCore.ContentManagement.Metadata.Models
@using Etch.OrchardCore.Fields.ResponsiveMedia.Settings

@{ 
    var settings = Model.PartFieldDefinition.GetSettings<ResponsiveMediaFieldSettings>(); 
}

<script asp-src="~/OrchardCore.Media/Scripts/media.js" asp-name="media" at="Foot" depends-on="admin, vuejs, sortable, vuedraggable"></script>
<style asp-src="~/OrchardCore.Media/Styles/media.min.css" debug-src="~/OrchardCore.Media/Styles/media.css"></style>
<script asp-src="https://vuejs.org/js/vue.min.js" debug-src="https://vuejs.org/js/vue.js" asp-name="vuejs" at="Foot"></script>
<script asp-src="https://cdn.jsdelivr.net/sortable/1.4.2/Sortable.min.js" debug-src="https://cdn.jsdelivr.net/sortable/1.4.2/Sortable.js" asp-name="sortable" at="Foot"></script>
<script asp-src="https://cdnjs.cloudflare.com/ajax/libs/Vue.Draggable/2.14.1/vuedraggable.min.js" debug-src="https://cdnjs.cloudflare.com/ajax/libs/Vue.Draggable/2.14.1/vuedraggable.js" asp-name="vuedraggable" depends-on="vuejs, sortable" at="Foot"></script>

<script asp-src="~/Etch.OrchardCore.Fields/Scripts/responsiveMedia/admin.js" asp-name="responsiveMedia" depends-on="jquery" at="Foot"></script>

<script at="Foot">
    initializeMediaApplication(false, '@Url.Action("MediaApplication", "Admin", new { area = "OrchardCore.Media" })');
    initializeResponsiveMediaEditor(document.getElementById('@Html.IdFor(m => m)'), document.getElementById('@Html.IdFor(m => m)-ModalBody'), @(Newtonsoft.Json.JsonConvert.SerializeObject(settings.GetBreakpoints())), @(settings.Multiple ? "true" : "false"), @(settings.AllowMediaText ? "true" : "false"));
</script>

<div class="responsive-media-field-editor" id="@Html.IdFor(m => m)" data-for="@Html.IdFor(m => m.Data)">
    <div class="responsive-media-field">
        <div class="form-group">
            <label asp-for="Data">@Model.PartFieldDefinition.DisplayName()</label>
            @if (!string.IsNullOrWhiteSpace(settings.Hint))
            {
                <span class="hint">@settings.Hint</span>
            }

            <input asp-for="Data" type="hidden" :value="value" data-init="@Model.Data" />

            <nav class="responsive-media-field-toolbar mb-3">
                <div class="btn-group">
                    <button type="button" class="btn btn-secondary btn-sm" v-on:click="add" :disabled="!canAdd"><span class="fa fa-plus"></span></button>
                </div>
            </nav>

            <draggable :list="mediaItems" element="ol" class="row media-items-grid" v-if="hasMedia">
                <div class="col-sm-3" v-for="(item, index) in mediaItems">
                    <responsive-media-item v-bind:allow-media-text="allowMediaText" v-bind:media="item" v-bind:breakpoints="breakpoints" v-on:remove="remove" v-on:showmediatext="showMediaText" v-on:update="update" />
                </div>
            </draggable>
        </div>
    </div>

    <div class="modal" ref="mediaTextModal">
        <div v-if="selectedMedia" class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">@T["Enter media text"]</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        <input class="form-control" v-if="selectedMedia" v-model="selectedMedia.mediaText" />
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" data-dismiss="modal">@T["OK"]</button>
                    <button type="button" class="btn btn-secondary" v-on:click="cancelMediaTextModal">@T["Cancel"]</button>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal" id="@Html.IdFor(m => m)-ModalBody">
    <div class="modal-dialog modal-lg media-modal" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">@T["Select Media"]</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>

            <div class="modal-body"></div>

            <div class="modal-footer">
                <button type="button" class="btn btn-primary mediaFieldSelectButton">@T["OK"]</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">@T["Cancel"]</button>
            </div>
        </div>
    </div>
</div>