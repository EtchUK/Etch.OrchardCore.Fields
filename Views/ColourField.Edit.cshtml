@model Etch.OrchardCore.Fields.Colour.ViewModels.EditColourFieldViewModel

@using Etch.OrchardCore.Fields.Colour.Settings

@{
    var settings = Model.PartFieldDefinition.GetSettings<ColourFieldSettings>();
    var placeholder = Guid.NewGuid().ToString().ToLower();
}

<style asp-src="~/Etch.OrchardCore.Fields/Styles/colour/admin.css" at="Head" asp-append-version="true"></style>
<script asp-src="~/Etch.OrchardCore.Fields/Scripts/colour/admin.js" asp-name="colour" depends-on="jquery" at="Foot" asp-append-version="true"></script>
<script at="Foot">
    initializeColourEditor(document.getElementById('@placeholder'));
</script>

<div class="form-group" id="@placeholder">
    <label asp-for="Value">@Model.PartFieldDefinition.DisplayName()</label>

    @if (!String.IsNullOrEmpty(settings.Hint))
    {
        <p class="hint">@settings.Hint</p>
    }

    <div class="row">
    @foreach (var color in settings.Colours)
    {
        <div class="col-md-auto">
            <button type="button" class="btn rounded-lg mb-1 swatch @(color.Value == Model.Value ? "is-selected" : "") js-colour-btn" data-colour="@color.Value" style="background-color: @color.Value;"></button>
            <p class="hint">@color.Name</p>
        </div>
    }

    @if (settings.AllowTransparent)
    {
    <div class="col-md-auto">
        <button type="button" class="btn rounded-lg mb-1 swatch @(Model.IsTransparent ? "is-selected" : "") js-transparent-btn" style="background-image: url('@Context.Request.PathBase/Etch.OrchardCore.Fields/Content/background-transparent.png');"></button>
        <p class="hint">@T["Transparent"]</p>
    </div>
    }

    @if (settings.AllowCustom)
    {
        <div class="col-md-auto">
            <input class="mb-1 swatch @(Model.IsCustomColour ? "is-selected" : "") js-colour-input" type="color" />
            <p class="hint">@T["Specify custom"]</p>
        </div>
    }
    </div>

    <input type="hidden" asp-for="Value" class="js-colour-hidden" />
</div>